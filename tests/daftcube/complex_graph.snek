(fun (createComplexGraph)
    (let ( 
        (f (vec 5 0))
        (c (vec 2 f))
        (e (vec 4 f))
        (b (vec 1 e c 0))
        (a (vec 0 b))
        (d (vec 3 b f 0 0)) 
        )
        
        (block
            (vec-set! f 1 a)
            (vec-set! d 2 d)
            (vec-set! d 3 d)
            (vec-set! b 3 a)
            (vec a b c d e f)
        )
    )
)

(let ((i 0) (iteration_count input) (temp_store_a nil))
    (loop
        (block
            (set! temp_store_a (createComplexGraph))

            (if (> i iteration_count)
                (break temp_store_a)
                (set! i (+ i 1))
            )

            (vec 1 2 3 4)
        )
    )
)